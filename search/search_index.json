{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My Linux Documentation","text":"<p>Welcome to my Linux Documentation Hub! This is where I document everything Linux-related, from system administration to custom configurations, scripting, and troubleshooting.</p>"},{"location":"#what-youll-find-here","title":"\ud83d\udccc What You\u2019ll Find Here","text":"<ul> <li>Distributions &amp; Distrohopping \u2013 My experiences with different Linux distros.</li> <li>System Administration \u2013 Configuration guides, automation, and best practices.</li> <li>Package Management \u2013 Managing software across different package managers.</li> <li>Scripting &amp; Automation \u2013 Bash, Python, and other useful scripts.</li> <li>Desktop Environments &amp; Window Managers \u2013 Customization, ricing, and workflow improvements.</li> <li>Kernel &amp; Drivers \u2013 Custom kernel configurations and driver troubleshooting.</li> <li>Networking \u2013 Configuring networks, firewalls, and VPNs.</li> <li>Security &amp; Hardening \u2013 Best practices for securing a Linux system.</li> <li>Filesystems &amp; Storage \u2013 Working with ext4, Btrfs, ZFS, and more.</li> <li>Development &amp; Productivity Tools \u2013 CLI tools, IDEs, and workflows.</li> <li>BSD Corner \u2013 Exploring BSD-based systems and their similarities to Linux.</li> </ul>"},{"location":"#getting-started","title":"\ud83d\ude80 Getting Started","text":"<ul> <li>Use the navigation menu to explore different topics.</li> <li>Each section is structured with easy-to-follow guides.</li> <li>Regular updates as I experiment and learn new things.</li> </ul> <p>Stay tuned as I continue to document my Linux journey! \ud83d\ude80</p>"},{"location":"de-wm/bspwm/","title":"Bspwm","text":""},{"location":"de-wm/bspwm/#test","title":"test","text":""},{"location":"desktop_environments/bspwm/","title":"bspwm","text":""},{"location":"desktop_environments/bspwm/#test","title":"test","text":""},{"location":"distributions/intro/","title":"Introduction","text":""},{"location":"distributions/intro/#test","title":"test","text":""},{"location":"server/vps/","title":"VPS Setup Guide","text":""},{"location":"server/vps/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Initial Setup: Create a Non\u2011Root User</li> <li>Install Docker on Debian</li> <li>Install Portainer for Docker Management</li> <li>Deploy Nextcloud via Portainer</li> <li>Configure Your Domain and Reverse Proxy</li> <li>Conclusion</li> <li>References</li> </ol>"},{"location":"server/vps/#initial-setup-create-a-nonroot-user","title":"Initial Setup: Create a Non\u2011Root User","text":"<p>A fresh Debian installation may only have the root account enabled. For better security and daily use, create a non\u2011root user with sudo privileges.</p>"},{"location":"server/vps/#steps","title":"Steps:","text":"<ol> <li>Log in as root:</li> <li> <p>At the console or via SSH, log in with the root credentials provided during installation.</p> </li> <li> <p>Create a new user (e.g., <code>admin</code>): <code>sh    adduser admin</code></p> </li> <li> <p>Follow the prompts to set a password and fill in any optional details.</p> </li> <li> <p>Grant the new user sudo privileges: <code>sh    usermod -aG sudo admin</code></p> </li> <li> <p>Log out and log back in as the new user:</p> </li> <li>You can now perform administrative tasks using <code>sudo</code>.</li> </ol>"},{"location":"server/vps/#install-docker-on-debian","title":"Install Docker on Debian","text":"<p>(Based on best practices from guides such as Shapehost\u2019s tutorial and HowtoForge)</p>"},{"location":"server/vps/#steps_1","title":"Steps:","text":"<ol> <li> <p>Update the system and install prerequisites: <code>sh    sudo apt update    sudo apt install apt-transport-https ca-certificates curl gnupg2 software-properties-common -y</code></p> </li> <li> <p>Add Docker\u2019s official GPG key and repository: <code>sh    curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg    echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</code></p> </li> <li> <p>Install Docker CE: <code>sh    sudo apt update    sudo apt install docker-ce -y</code></p> </li> <li> <p>Verify Docker is installed: <code>sh    docker --version</code></p> </li> <li>You should see output like <code>Docker version 20.10.xx, build xxxxxxx</code>.</li> </ol>"},{"location":"server/vps/#install-portainer-for-docker-management","title":"Install Portainer for Docker Management","text":"<p>Portainer provides a web-based interface to easily manage your Docker containers.</p>"},{"location":"server/vps/#steps_2","title":"Steps:","text":"<ol> <li> <p>Create a Docker volume for Portainer\u2019s data: <code>sh    sudo docker volume create portainer_data</code></p> </li> <li> <p>Deploy the Portainer container: <code>sh    sudo docker run -d \\      -p 8000:8000 \\      -p 9000:9000 \\      --name=portainer \\      --restart=always \\      -v /var/run/docker.sock:/var/run/docker.sock \\      -v portainer_data:/data \\      portainer/portainer-ce:latest</code></p> </li> <li> <p>Access Portainer\u2019s Web UI:</p> </li> <li>Open your browser and go to <code>http://&lt;your-vps-public-ip&gt;:9000</code></li> <li>Create an admin account when prompted and select \u201cLocal\u201d to manage your Docker host.</li> </ol>"},{"location":"server/vps/#deploy-nextcloud-via-portainer","title":"Deploy Nextcloud via Portainer","text":"<p>Using Portainer\u2019s \u201cStacks\u201d feature you can deploy a multi\u2011container Docker Compose file. In this example, Nextcloud is deployed with a MariaDB backend.</p>"},{"location":"server/vps/#example-docker-compose-file","title":"Example Docker Compose File","text":"<p>Create a stack (either via Portainer\u2019s UI or by saving this YAML file locally) similar to the following. Adjust host paths and environment variables as needed.</p> <pre><code>version: \"3.8\"\n\nservices:\n  nextcloud:\n    image: linuxserver/nextcloud:latest\n    container_name: nextcloud\n    environment:\n      - PUID=1000            # Ensure this matches your non-root user (e.g., admin)\n      - PGID=1000\n      - TZ=Europe/Berlin      # Adjust timezone as required\n      # Additional Nextcloud settings (upload limits, memory, etc.) can be added here\n    volumes:\n      - /srv/nextcloud/config:/config    # Persistent config directory on the host\n      - /srv/nextcloud/data:/data          # Persistent data directory on the host\n    ports:\n      - \"8080:443\"           # Map container HTTPS port to host port 8080 (for initial setup)\n    restart: unless-stopped\n    depends_on:\n      - nextcloud-db\n\n  nextcloud-db:\n    image: linuxserver/mariadb:latest\n    container_name: nextcloud-db\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=Europe/Berlin\n      - MYSQL_ROOT_PASSWORD=YourRootPassword\n      - MYSQL_DATABASE=nextcloud\n      - MYSQL_USER=nextcloud\n      - MYSQL_PASSWORD=YourDBPassword\n    volumes:\n      - /srv/nextcloud/db:/config\n    restart: unless-stopped\n\nnetworks:\n  default:\n    driver: bridge\n</code></pre>"},{"location":"server/vps/#deployment-steps","title":"Deployment Steps:","text":"<ol> <li>In Portainer, navigate to Stacks and click Add stack.</li> <li>Paste the YAML above (or upload your file), give the stack a name (e.g., \u201cNextcloud\u201d), and click Deploy the stack.</li> <li>Once deployed, access Nextcloud by navigating to <code>http://&lt;your-vps-public-ip&gt;:8080</code></li> <li>Complete the web installer by entering the database details you specified.</li> </ol> <p>For more examples and custom templates, see community templates such as the GitHub repository by tv0ll.</p>"},{"location":"server/vps/#configure-your-domain-and-reverse-proxy","title":"Configure Your Domain and Reverse Proxy","text":"<p>To make Nextcloud available at <code>nextcloud.bobbyxdev.xyz</code> and secure it with HTTPS, follow these steps:</p>"},{"location":"server/vps/#dns-setup","title":"DNS Setup","text":"<ol> <li>Log in to your DNS provider\u2019s control panel.</li> <li>Create an A record for the subdomain:</li> <li>Name/Host: nextcloud</li> <li>Type: A</li> <li>Value: Your VPS public IP</li> </ol> <p>This points <code>nextcloud.bobbyxdev.xyz</code> to your VPS.</p>"},{"location":"server/vps/#optional-reverse-proxy-and-ssl-with-swag","title":"(Optional) Reverse Proxy and SSL with SWAG","text":"<p>For production use, it\u2019s recommended to front Nextcloud with a reverse proxy that handles SSL:</p> <ol> <li> <p>Deploy a reverse proxy container such as SWAG (Secure Web Application Gateway by linuxserver.io) or Nginx Proxy Manager. For example, SWAG can be deployed like this:    <code>sh    sudo docker run -d \\      --name=swag \\      --cap-add=NET_ADMIN \\      -e PUID=1000 \\      -e PGID=1000 \\      -e TZ=Europe/Berlin \\      -e URL=bobbyxdev.xyz \\      -e SUBDOMAINS=nextcloud \\      -e VALIDATION=http \\      -p 80:80 \\      -p 443:443 \\      -v /path/to/swag/config:/config \\      --restart unless-stopped \\      linuxserver/swag</code></p> </li> <li> <p>Configure SWAG:</p> </li> <li> <p>Set up a reverse proxy rule so that requests to <code>nextcloud.bobbyxdev.xyz</code> are forwarded to your Nextcloud container (e.g., to <code>localhost:8080</code>). Consult the SWAG documentation for instructions on customizing your setup.</p> </li> <li> <p>Update Nextcloud\u2019s trusted domains:</p> </li> <li>Edit the Nextcloud configuration file (found in your mounted <code>/srv/nextcloud/config</code> directory) to include your subdomain:      <code>php      'trusted_domains' =&gt;        array (          0 =&gt; 'localhost',          1 =&gt; 'nextcloud.bobbyxdev.xyz',        ),</code></li> </ol> <p>This ensures Nextcloud accepts connections from your domain.</p>"},{"location":"server/vps/#conclusion","title":"Conclusion","text":"<p>This guide has taken you from a fresh Debian installation (starting with only a root account) through creating a new administrative user, installing Docker and Portainer, deploying a Nextcloud stack, configuring your domain, and setting up a reverse proxy with SSL.</p> <p>By following these steps, you now have a robust self-hosted Nextcloud instance managed via Portainer on your Debian VPS. For further customization or troubleshooting, consult the official documentation.</p>"},{"location":"server/vps/#references","title":"References","text":"<ul> <li>Portainer Installation Guides \u2013 Shapehost and HowtoForge</li> <li>Nextcloud Docker deployments and templates \u2013 GitHub: tv0ll/portainer-nextcloud and community discussions (Nextcloud AIO thread)</li> </ul>"}]}